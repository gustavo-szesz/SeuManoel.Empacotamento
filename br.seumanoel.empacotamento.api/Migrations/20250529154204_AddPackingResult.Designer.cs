// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using br.seumanoel.empacotamento.api.Data;

#nullable disable

namespace br.seumanoel.empacotamento.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250529154204_AddPackingResult")]
    partial class AddPackingResult
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("br.seumanoel.empacotamento.api.Models.PackedBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoxName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackingResultId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackingResultId");

                    b.ToTable("PackedBoxes");
                });

            modelBuilder.Entity("br.seumanoel.empacotamento.api.Models.PackedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PackedBoxId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PackedBoxId");

                    b.ToTable("PackedProducts");
                });

            modelBuilder.Entity("br.seumanoel.empacotamento.api.Models.PackingResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PackingResults");
                });

            modelBuilder.Entity("br.seumanoel.empacotamento.api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("br.seumanoel.empacotamento.api.Models.PackedBox", b =>
                {
                    b.HasOne("br.seumanoel.empacotamento.api.Models.PackingResult", "PackingResult")
                        .WithMany("Boxes")
                        .HasForeignKey("PackingResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackingResult");
                });

            modelBuilder.Entity("br.seumanoel.empacotamento.api.Models.PackedProduct", b =>
                {
                    b.HasOne("br.seumanoel.empacotamento.api.Models.PackedBox", "PackedBox")
                        .WithMany("Products")
                        .HasForeignKey("PackedBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackedBox");
                });

            modelBuilder.Entity("br.seumanoel.empacotamento.api.Models.PackedBox", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("br.seumanoel.empacotamento.api.Models.PackingResult", b =>
                {
                    b.Navigation("Boxes");
                });
#pragma warning restore 612, 618
        }
    }
}
